import { createConverter } from './esm/converter';
export interface HtmlComponent<TProps> {
    component: {
        mount(element: HTMLElement, props: TProps, ctx: any, locals: any): void;
        update?(element: HTMLElement, props: TProps, ctx: any, locals: any): void;
        unmount?(element: HTMLElement, locals: any): void;
    };
    type: 'html';
}
export interface SvelteConverter {
    (...params: Parameters<ReturnType<typeof createConverter>>): HtmlComponent<any>;
}
export declare function createSvelteConverter(...params: Parameters<typeof createConverter>): {
    from: SvelteConverter;
    Extension: string;
};
declare const fromSvelte: SvelteConverter, SvelteExtension: string;
export { fromSvelte, SvelteExtension };
